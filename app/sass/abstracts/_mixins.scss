// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper

@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly

/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
  $raw-query: map-get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

@mixin font($size, $weight: 400, $lineHeight: 1.4) {
	font-size: $size;
	font-weight: $weight;
	line-height: $lineHeight;
}

@mixin transition($object, $time) {
	-webkit-transition: $object $time ease;
	-moz-transition: $object $time ease;
	-o-transition: $object $time ease;
	transition: $object $time ease;
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &::-moz-placeholder{
    @content;
  }
  &:-ms-input-placeholder{
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
}

@mixin transform($argument) {
  -webkit-transform: $argument; 
     -moz-transform: $argument;
		  -ms-transform: $argument; 
		      transform: $argument;
}

